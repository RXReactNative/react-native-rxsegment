!function(e){function t(t){for(var r,i,u=t[0],l=t[1],s=t[2],c=0,d=[];c<u.length;c++)i=u[c],Object.prototype.hasOwnProperty.call(a,i)&&a[i]&&d.push(a[i][0]),a[i]=0;for(r in l)Object.prototype.hasOwnProperty.call(l,r)&&(e[r]=l[r]);for(f&&f(t);d.length;)d.shift()();return o.push.apply(o,s||[]),n()}function n(){for(var e,t=0;t<o.length;t++){for(var n=o[t],r=!0,u=1;u<n.length;u++){var l=n[u];0!==a[l]&&(r=!1)}r&&(o.splice(t--,1),e=i(i.s=n[0]))}return e}var r={},a={0:0},o=[];function i(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=e,i.c=r,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)i.d(n,r,function(t){return e[t]}.bind(null,r));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="";var u=window.webpackJsonp=window.webpackJsonp||[],l=u.push.bind(u);u.push=t,u=u.slice();for(var s=0;s<u.length;s++)t(u[s]);var f=l;o.push([183,1]),n()}({114:function(e){e.exports=JSON.parse('{"a":"RXSegment"}')},116:function(e,t,n){var r="/Users/srxboys/srxboys/github/RX_React_Native/react-native-rxsegment/src/common/component/RXPage.js",a=this,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),u=d(i),l=d(n(23)),s=d(n(117)),f=d(n(40)),c=d(n(202));function d(e){return e&&e.__esModule?e:{default:e}}var p=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.onBackAndroid=function(){return n.navigation.goBack(),!0},n.__navigateRightPress=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(n.navigateRightPress)n.navigateRightPress(e);else{var t=n.navigation||{},r=t.state||{};routeName=r.routeName||"routeName=empty-page",console.error("navigateRightPress() is not implemented on the current `"+routeName+"` page")}},n.viewDidAppear=n.viewDidAppear.bind(n),n.viewDidDisappear=n.viewDidDisappear.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),o(t,[{key:"UNSAFE_componentWillMount",value:function(){this.navigation&&(this.appear=this.props.navigation.addListener("didFocus",this.viewDidAppear),this.disappear=this.props.navigation.addListener("didBlur",this.viewDidDisappear)),c.default.isAndroid()&&s.default.addEventListener("hardwareBackPress",this.onBackAndroid)}},{key:"componentWillUnmount",value:function(){this.appear&&this.appear.remove(),this.appear=null,this.disappear&&this.disappear.remove(),this.disappear=null,c.default.isAndroid()&&s.default.removeEventListener("hardwareBackPress",this.onBackAndroid)}},{key:"viewDidAppear",value:function(){}},{key:"viewDidDisappear",value:function(){}},{key:"componentDidMount",value:function(){this.props.navigation.setParams({navigateRightPress:this.__navigateRightPress})}},{key:"navigation",get:function(){return this.props.navigation}},{key:"navParams",get:function(){return this.props.navigation.state.params||{}}}],[{key:"configNavigation",value:function(e){var t=this.navigationTitle(),n=this.navigationBackTitle(),a=this.navigationRightTitle(),o={};if(this._stringEnable(t)&&(o.title=t),this._stringEnable(n)&&(o.headerBackTitle=n+""),a&&u.default.isValidElement(a))o.headerRight=a;else if(this._stringEnable(a)){var i=u.default.createElement(f.default,{activeOpacity:.5,onPress:function(){var t=e.state.params.navigateRightPress;t&&t()},__source:{fileName:r,lineNumber:102}},u.default.createElement(l.default,{style:{color:"gray",fontSize:15,paddingRight:15},__source:{fileName:r,lineNumber:109}},a));o.headerRight=i}return o}},{key:"_stringEnable",value:function(e){return!!e&&("number"==typeof e||"string"==typeof e)}}]),t}(i.Component);p.navigationOptions=function(e){var t=e.navigation;return a.configNavigation(t)},e.exports=p},120:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a="/Users/srxboys/srxboys/github/RX_React_Native/react-native-rxsegment/src/common/component/segment/SegmentIOS/SegmentTab.js",o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=p(n(1)),u=p(n(4)),l=p(n(23)),s=p(n(3)),f=p(n(40)),c=p(n(0)),d=n(87);function p(e){return e&&e.__esModule?e:{default:e}}var b=function(e){function t(e,n){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e,n))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),o(t,[{key:"renderMiddenLine",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=this.props,n=t.middleLineEnable,r=t.middleLineStyle;return n?i.default.createElement(s.default,{style:[{width:1,backgroundColor:"blue"},r],key:"s-m-l-"+e,__source:{fileName:a,lineNumber:45}}):null}},{key:"renderLabel",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=arguments[1],n=this.props,r=n.labelBorderRadius,o=n.tabBarStyle,u=n.labelStyle,s=n.selectIndex,c=n.activeTextColor,d=n.inactiveTextColor,p=n.onPress,b=t===s?{fontWeight:"bold",color:c}:{color:d},y=t===s?{backgroundColor:"#DEDEDE"}:{backgroundColor:"white"};return i.default.createElement(f.default,{key:"tabBar-label-"+t,style:[m.labelContent,{borderRadius:r},y,o],activeOpacity:t!=s?.7:1,onPress:function(){t!=s&&p&&p(t)},__source:{fileName:a,lineNumber:53}},i.default.createElement(l.default,{style:[m.label,u,b],__source:{fileName:a,lineNumber:63}},e))}},{key:"render",value:function(){var e=this.props,t=e.style,n=e.borderRadius;return i.default.createElement(s.default,{style:[m.container,{borderRadius:n},t],__source:{fileName:a,lineNumber:72}},this.renderTabBarLabel())}}]),t}(d.RXSegmentTabBar);b.propTypes=r({},d.RXSegmentTabBar.propTypes,{borderRadius:c.default.number,labelBorderRadius:c.default.number,middleLineEnable:c.default.bool}),b.defaultProps=r({},d.RXSegmentTabBar.defaultProps,{borderRadius:8,labelBorderRadius:8,activeTextColor:"#000",inactiveTextColor:"#000",middleLineEnable:!1,middleLineStyle:{}}),t.default=b;var m=u.default.create({container:{marginHorizontal:10,marginVertical:5,height:30,borderWidth:1,borderColor:"blue",overflow:"hidden",flexDirection:"row"},labelContent:{flex:1,backgroundColor:"white",justifyContent:"center",alignItems:"center"},label:{textAlign:"center",fontSize:16}})},164:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0});var r,a=n(185),o=(r=a)&&r.__esModule?r:{default:r};t.default=o.default},183:function(e,t,n){e.exports=n(184)},184:function(e,t,n){"use strict";n.r(t);var r=n(181),a=n(164),o=n.n(a),i=n(114);r.a.registerComponent(i.a,()=>o.a),r.a.runApplication(i.a,{rootTag:document.getElementById("react-root")})},185:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});i(n(1));var r=i(n(187)),a=i(n(204)),o=n(39);function i(e){return e&&e.__esModule?e:{default:e}}var u=(0,n(281).createStackNavigator)({home:{screen:r.default},diy:{screen:a.default}},{initialRouteName:"home",mode:"card",navigationOptions:function(){return{gesturesEnabled:!0}}});t.default=(0,o.createAppContainer)(u)},187:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0});var r="/Users/srxboys/srxboys/github/RX_React_Native/react-native-rxsegment/src/pages/home/index.js",a=this,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=b(n(1)),u=b(n(4)),l=b(n(3)),s=b(n(8)),f=b(n(116)),c=n(87),d=b(c),p=b(n(120));function b(e){return e&&e.__esModule?e:{default:e}}var m=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.navigateRightPress=function(){n.navigation.navigate("diy")},n.reload=function(){n.refTwo&&n.refTwo.reload&&n.refTwo.reload()},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),o(t,[{key:"render",value:function(){return i.default.createElement(l.default,{style:{flex:1,backgroundColor:"gary"},__source:{fileName:r,lineNumber:49}},i.default.createElement(d.default,{tabBarStyle:{backgroundColor:"blue",paddingTop:20},tabBarLabels:["ios","android","web"],__source:{fileName:r,lineNumber:50}},i.default.createElement(l.default,{style:y.container,__source:{fileName:r,lineNumber:54}})),i.default.createElement(d.default,{style:y.segmentHeader,renderTabBar:function(){return i.default.createElement(c.RXSegmentTabBar,{style:{backgroundColor:"#7D26CD",paddingTop:20},tabBarLabels:["ios","android","web",""],activeTextColor:"red",underlineStyle:{width:50,height:3,backgroundColor:"red"},__source:{fileName:r,lineNumber:60}})},__source:{fileName:r,lineNumber:57}},i.default.createElement(l.default,{style:y.container,__source:{fileName:r,lineNumber:68}}),i.default.createElement(l.default,{style:y.container,__source:{fileName:r,lineNumber:69}})),i.default.createElement(d.default,{style:y.segmentHeader,renderTabBar:function(){return i.default.createElement(p.default,{tabBarLabels:["ios","android","web"],__source:{fileName:r,lineNumber:76}})},__source:{fileName:r,lineNumber:73}},i.default.createElement(l.default,{style:y.container,__source:{fileName:r,lineNumber:81}}),i.default.createElement(l.default,{style:y.container,__source:{fileName:r,lineNumber:82}}),i.default.createElement(l.default,{style:y.container,__source:{fileName:r,lineNumber:83}})),i.default.createElement(d.default,{style:y.segmentHeader,renderTabBar:function(){return i.default.createElement(p.default,{tabBarLabels:["ios","android","web"],labelBorderRadius:0,middleLineEnable:!0,style:{borderColor:"#A020F0"},middleLineStyle:{backgroundColor:"#A020F0"},__source:{fileName:r,lineNumber:90}})},__source:{fileName:r,lineNumber:87}},i.default.createElement(l.default,{style:y.container,__source:{fileName:r,lineNumber:100}}),i.default.createElement(l.default,{style:y.container,__source:{fileName:r,lineNumber:101}}),i.default.createElement(l.default,{style:y.container,__source:{fileName:r,lineNumber:102}})))}}],[{key:"navigationTitle",value:function(){return"Segment"}},{key:"navigationBackTitle",value:function(){return"0-back"}},{key:"navigationRightTitle",value:function(){return"diy"}}]),t}(f.default);m.navigationOptions=function(e){var t=e.navigation;if("web"!=s.default.OS)return a.configNavigation(t)},t.default=m;var y=u.default.create({segmentHeader:{marginTop:10},container:{flex:1,height:10}})},202:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0});var r,a=n(8),o=(r=a)&&r.__esModule?r:{default:r};var i={isWeb:function(){return"web"===o.default.OS},isAndroid:function(){return i.isWeb()?!!!window.navigator.userAgent.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/):"android"===o.default.OS},isIOS:function(){return i.isWeb()?!!window.navigator.userAgent.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/):"ios"===o.default.OS}};t.default=i},204:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0});var r="/Users/srxboys/srxboys/github/RX_React_Native/react-native-rxsegment/src/pages/diy/index.js",a=this,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=b(n(1)),u=b(n(3)),l=b(n(23)),s=b(n(8)),f=b(n(116)),c=b(n(205)),d=b(n(206)),p=b(n(207));function b(e){return e&&e.__esModule?e:{default:e}}var m=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.navigateRightPress=function(){alert("right onPress")},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),o(t,[{key:"render",value:function(){return i.default.createElement(u.default,{style:{flex:1,backgroundColor:"white"},__source:{fileName:r,lineNumber:43}},i.default.createElement(l.default,{style:{marginBottom:10},__source:{fileName:r,lineNumber:44}},"diy segment"),i.default.createElement(c.default,{tabBarLabels:["ios","android","web"],__source:{fileName:r,lineNumber:45}},i.default.createElement(d.default,{navigation:this.navigation,__source:{fileName:r,lineNumber:46}}),i.default.createElement(p.default,{navigation:this.navigation,__source:{fileName:r,lineNumber:47}})))}}],[{key:"navigationTitle",value:function(){return"diy segment && tabBar"}},{key:"navigationBackTitle",value:function(){return"1-back"}},{key:"navigationRightTitle",value:function(){return"right"}}]),t}(f.default);m.navigationOptions=function(e){var t=e.navigation;if("web"!=s.default.OS)return a.configNavigation(t)},t.default=m},205:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a="/Users/srxboys/srxboys/github/RX_React_Native/react-native-rxsegment/src/common/component/segment/SegmentIOS/SegmentIOS.js",o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),u=p(i),l=p(n(4)),s=p(n(3)),f=p(n(0)),c=p(n(87)),d=p(n(120));function p(e){return e&&e.__esModule?e:{default:e}}var b=function(e){function t(e,n){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e,n))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),o(t,[{key:"render",value:function(){var e=this.props,t=e.style,n=e.tabBarLabels,o=e.children,i=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["style","tabBarLabels","children"]);return u.default.createElement(c.default,{style:[m.container,t],tabBarLabels:n,renderTabBar:function(){return u.default.createElement(d.default,r({tabBarLabels:n},i,{__source:{fileName:a,lineNumber:46}}))},__source:{fileName:a,lineNumber:42}},o)}}]),t}(i.Component);b.propTypes=r({},s.default.propTypes,{tabBarLabels:f.default.arrayOf(f.default.oneOfType([f.default.element,f.default.string,f.default.number]))}),b.defaultProps=r({},s.default.defaultProps,{tabBarLabels:[]}),t.default=b;var m=l.default.create({container:{flex:1}})},206:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r="/Users/srxboys/srxboys/github/RX_React_Native/react-native-rxsegment/src/pages/listPages/ListPageOne.js",a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(1),i=c(o),u=c(n(3)),l=c(n(23)),s=c(n(121)),f=c(n(38));function c(e){return e&&e.__esModule?e:{default:e}}var d=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"componentDidMount",value:function(){console.log("load 11111")}},{key:"render",value:function(){var e=this,t=this.props.style;return i.default.createElement(f.default,{style:t,__source:{fileName:r,lineNumber:25}},i.default.createElement(u.default,{style:{flex:1,backgroundColor:"gary"},__source:{fileName:r,lineNumber:26}},i.default.createElement(u.default,{style:{flex:1,marginTop:100,height:40,backgroundColor:"blue"},__source:{fileName:r,lineNumber:27}}),i.default.createElement(l.default,{__source:{fileName:r,lineNumber:28}},"1111111111"),i.default.createElement(s.default,{title:"jump diy -- -- ",color:"blue",onPress:function(){e.props.navigation.navigate("mine")},__source:{fileName:r,lineNumber:29}}),i.default.createElement(u.default,{style:{flex:1,marginTop:100,height:400,backgroundColor:"blue"},__source:{fileName:r,lineNumber:36}})))}}]),t}(o.Component);t.default=d},207:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r="/Users/srxboys/srxboys/github/RX_React_Native/react-native-rxsegment/src/pages/listPages/ListPageTwo.js",a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(1),i=p(o),u=p(n(4)),l=p(n(3)),s=p(n(23)),f=p(n(121)),c=p(n(8)),d=p(n(208));function p(e){return e&&e.__esModule?e:{default:e}}var b=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.falseData=function(){for(var e=new Date,t=[],n=0;n<5;n++){var r=n+" "+e;t.push({txt:r})}return t},n.refreshData=function(e,t){var r=n;return new Promise((function(e,t){setTimeout((function(){var t=r.falseData(),n=r.state.dataList.concat(t);r.setState({dataList:n}),e()}),2e3)}))},n.renderItem=function(e){var t=e.item,n=(e.index,t.txt||"");return i.default.createElement(l.default,{style:m.container,__source:{fileName:r,lineNumber:53}},i.default.createElement(s.default,{__source:{fileName:r,lineNumber:53}},n))},n.reload=function(){var e=n.state.dataList.concat([{txt:"srxboys"}]);n.setState({dataList:e})},n._keyExtractor=function(e,t){return e.id},n.state={dataList:[]},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"componentDidMount",value:function(){console.log("load 2222"),this.refreshData()}},{key:"render",value:function(){var e=this,t=this.props,n=t.style,a=t.navPush,o=this.state.dataList;return i.default.createElement(l.default,{style:[{flex:1,backgroundColor:"gary"},n],__source:{fileName:r,lineNumber:67}},i.default.createElement(l.default,{style:{marginTop:100,height:40,backgroundColor:"yellow"},__source:{fileName:r,lineNumber:68}}),i.default.createElement(s.default,{__source:{fileName:r,lineNumber:69}},"2222222222222"),i.default.createElement(f.default,{title:"jump diy",color:"blue",onPress:function(){a&&"function"==typeof a&&a(),"web"===c.default.OS&&e.props.navigation.navigate("diy")},__source:{fileName:r,lineNumber:70}}),i.default.createElement(d.default,{renderItem:this.renderItem,data:o,keyExtractor:function(e,t){return""+t},onPullDown:this.refreshData,pageSize:10,__source:{fileName:r,lineNumber:82}}))}}]),t}(o.Component);t.default=b;var m=u.default.create({container:{flex:1,height:44,backgroundColor:"yellow",justifyContent:"center",alignItems:"center"}})},208:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a="/Users/srxboys/srxboys/github/RX_React_Native/react-native-rxsegment/src/common/component/RXFlatList.js",o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),u=m(i),l=m(n(4)),s=m(n(3)),f=m(n(105)),c=m(n(8)),d=m(n(63)),p=m(n(0)),b=m(n(210));function m(e){return e&&e.__esModule?e:{default:e}}var y=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n._pullDownRefresh=function(){n.props.onPullDown&&(n.state.refreshing?n.setState({refreshing:!1,webRefreshing:!1}):n.setState({pageNo:1,refreshing:!0,webRefreshing:!0},(function(){n.props.onPullDown(n.state.pageNo,n.props.pageSize).then((function(e){n.setState({refreshing:!1,noMoreData:!1,webRefreshing:!1})})).catch((function(e){n.setState({refreshing:!1,noMoreData:!1,webRefreshing:!1})}))})))},n._pullUpRefresh=function(){if(n.props.onPullUp)if(n.state.refreshing||n.state.noMoreData)n.setState({refreshing:!1});else{var e=n.state.pageNo+1;n.setState({pageNo:e,refreshing:!0},(function(){n.props.onPullUp(n.state.pageNo,n.props.pageSize).then((function(e){n.setState({noMoreData:e,refreshing:!1})})).catch((function(e){n.setState({refreshing:!1,noMoreData:!1})}))}))}},n._refreshControl=function(){if(n.props.onPullDown)return"web"===c.default.OS?null:u.default.createElement(d.default,{refreshing:n.state.refreshing,onRefresh:n._pullDownRefresh,__source:{fileName:a,lineNumber:112}})},n.state={pageNo:1,refreshing:!1,noMoreData:!1},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),o(t,[{key:"componentDidMount",value:function(){this.props.didMountRefresh&&this.props.onPullDown&&this._pullDownRefresh()}},{key:"render",value:function(){var e=this,t=this.state.webRefreshing;return u.default.createElement(s.default,{style:[h.container,this.props.style],__source:{fileName:a,lineNumber:125}},u.default.createElement(b.default,{style:{marginBottom:10},refreshing:t,onPress:function(){e.refFlatList&&e.refFlatList.scrollToOffset&&e.refFlatList.scrollToOffset({animated:!0,offset:0}),e._pullDownRefresh()},__source:{fileName:a,lineNumber:126}}),u.default.createElement(f.default,r({},this.props,{ref:function(t){e.refFlatList=t},refreshControl:this._refreshControl(),onEndReachedThreshold:.2,onEndReached:this._pullUpRefresh,ItemSeparatorComponent:this.props.itemSeparatorComponent,__source:{fileName:a,lineNumber:136}})))}}]),t}(i.Component);y.propTypes=r({},f.default.propTypes,{pageSize:p.default.number,didMountRefresh:p.default.bool,onPullDown:p.default.func,onPullUp:p.default.func,emptyImage:p.default.any,emptyTitle:p.default.string,itemSeparatorComponent:p.default.func}),y.defaultProps={didMountRefresh:!0,pageSize:10},t.default=y;var h=l.default.create({container:{}})},210:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a="/Users/srxboys/srxboys/github/RX_React_Native/react-native-rxsegment/src/common/component/RXRefreshHeader.js",o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),u=y(i),l=y(n(4)),s=y(n(3)),f=y(n(23)),c=y(n(8)),d=y(n(211)),p=(y(n(63)),y(n(40))),b=y(n(0)),m=y(n(212));function y(e){return e&&e.__esModule?e:{default:e}}var h=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),o(t,[{key:"renderWeb",value:function(){var e=this.props,t=e.refreshing,n=e.style,r=e.onPress;return t?u.default.createElement(s.default,{style:[g.container,n],__source:{fileName:a,lineNumber:43}},u.default.createElement(d.default,{animating:!0,__source:{fileName:a,lineNumber:44}})):u.default.createElement(p.default,{style:[g.container,n],onPress:function(){return r&&r()},__source:{fileName:a,lineNumber:51}},u.default.createElement(f.default,{style:g.textPre,__source:{fileName:a,lineNumber:52}},"点击",u.default.createElement(f.default,{style:g.textSuf,__source:{fileName:a,lineNumber:52}},"刷新获取最新数据")))}},{key:"render",value:function(){var e=this.props,t=e.hidden,n=e.appHeader;return t?null:"web"===c.default.OS?this.renderWeb():n}}]),t}(i.Component);h.propTypes=r({},s.default.propTypes,{hidden:b.default.bool,refreshing:b.default.bool,appHeader:b.default.element,onPress:b.default.func}),h.defaultProps=r({},s.default.defaultProps,{hidden:!1,refreshing:!1,appHeader:null,onPress:function(){}}),t.default=h;var g=l.default.create({container:{marginTop:12,justifyContent:"center",alignItems:"center"},textPre:{fontSize:12,color:m.default.BtnBlue},textSuf:{color:"#999999"}})},212:function(e,t){}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,